{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Info.js","panels/DZE.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","left","IOS","mode","Info","props","expandable","setState","activePanel","DZ8","header","App","useState","setActivePanel","setUser","setPopout","useEffect","a","connect","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","DZE","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d39bb74.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>GDZ || DC</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\n\t\t</Group>}\n\n\t\t<Group title=\"GDZ\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tКлассы\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t \n\t\t</Group>\n\t\t<Group title=\"Информация\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"info\">\n\t\t\t\t\tО нас \n\t\t\t\t</Button>\n              </Div>\n              </Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, Header, Group, Cell, List,  id   } from'@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\n\nconst osName = platform();\n\nconst Persik = ({ go,id}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tКлассы\n\t\t</PanelHeader>\n\t\t<Group title={<Header mode=\"secondary\">Классы</Header>}>\n\t\t <List>\n                <Cell onClick={go} data-to=\"DZ1\">1 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ2\">2 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ3\">3 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ4\">4 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ5\">5 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ6\">6 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ7\">7 класс</Cell>\n                <Cell onClick={go} data-to=\"DZE\">8 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ9\">9 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ10\">10 класс</Cell>\n                <Cell onClick={go} data-to=\"DZ11\">11 класс</Cell>\n\n\n              </List>\n\t\t</Group>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS, Header, Group, Cell, List } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n\r\n\r\nconst osName = platform();\r\n\r\nconst Info = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tКлассы\r\n\t\t</PanelHeader>\r\n\t\t<Group title={<Header mode=\"secondary\">Информация о нас</Header>}>\r\n\t\t <List>\r\n                <Cell>Название: GDZ || DC </Cell>\r\n                <cell><br></br>   Версия: 1.1</cell>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <cell> Создатели:<br></br> Роман Пух<br></br>Алан Панов</cell>\r\n              </List>\r\n\r\n              </Group>\r\n <Group title={<Header mode=\"secondary\">Переходы</Header>}>\r\n              <List>\r\n                <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })}>Учетная запись</Cell>\r\n                <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })}>Основные</Cell>\r\n                <Cell expandable onClick={() => this.setState({ activePanel: 'nothing' })}>Приватность</Cell>\r\n              </List>\r\n            </Group>\r\n\r\n\r\n\r\n\r\n\r\n\t</Panel>\r\n);\r\n\r\nInfo.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS, Header, Group, Cell, List } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n\r\n\r\nconst osName = platform();\r\n\r\nconst DZ8 = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tКлассы\r\n\t\t</PanelHeader>\r\n\t\t<Group header={<Header mode=\"secondary\">Классы</Header>}>\r\n\t\t <List>\r\n                <Cell>1 класс</Cell>\r\n                <Cell>2 класс</Cell>\r\n                <Cell>3 класс</Cell>\r\n              </List>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nDZ8.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DZ8;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Info from './panels/Info.js';\nimport DZE from './panels/DZE';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [ setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} >\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<Info id='info' go={go} />\n\t\t\t<DZE id='dze' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}